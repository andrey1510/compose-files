version: "2"

networks:
  test-network:
    driver: bridge

services:

  zookeeper1:
    container_name: zookeeper1
    image: confluentinc/cp-zookeeper:latest
    networks:
      - test-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_JMX_PORT: 9997
    ports:
      - 22181:2181
#      - 9997:9997
#    volumes:
#      - zookeeper_data:/ubuntu

#  zookeeper2:
#    container_name: zookeeper2
#    image: confluentinc/cp-zookeeper:latest
#    networks:
#      - test-network
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - 32181:2181

  kafka1:
    container_name: kafka1
    image: confluentinc/cp-kafka:latest
    networks:
      - test-network
    depends_on:
      - zookeeper1
#      - zookeeper2
    ports:
      - 29092:29092
      - 19997:19997
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181 #,zookeeper2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 19997
      KAFKA_JMX_HOSTNAME: localhost
#    volumes:
#      - kafka_data:/ubuntu

  kafka2:
    container_name: kafka2
    image: confluentinc/cp-kafka:latest
    networks:
      - test-network
    depends_on:
      - zookeeper1
#      - zookeeper2
    ports:
      - 39092:39092
#      - 19999:19997
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181 #,zookeeper2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1    
 #     KAFKA_JMX_PORT: 19997
 #     KAFKA_JMX_HOSTNAME: localjmx

  kafka-init-topics:
    container_name: kafka-init-topics
    image: confluentinc/cp-kafka:latest
    networks:
      - test-network
    depends_on:
      - kafka1
      - kafka2   
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka1:9092 --create --if-not-exists --topic key-values-topic --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka1:9092 --create --if-not-exists --topic values-topic --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka1:9092 --create --if-not-exists --topic demo_java --replication-factor 1 --partitions 3
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka1:9092 --list
      "

  kafka-ui:
    container_name: kafka_ui
    image: provectuslabs/kafka-ui:latest
    networks:
      - test-network
    ports:
      - 18080:8080
    depends_on:
      - kafka1
      - kafka2
    environment:
      KAFKA_CLUSTERS_0_NAME: test
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092, kafka2:9092
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_METRICS_PORT: 19997

#volumes:
#  zookeeper_data:
#    driver: local
#  kafka_data:
#    driver: local